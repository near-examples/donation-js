{"version":3,"file":"index.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/superserial/esm/symbol.js","../node_modules/superserial/esm/serialize.js","../node_modules/superserial/esm/parse.js","../node_modules/superserial/esm/deserialize.js","../node_modules/superserial/esm/serializer.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../src/utils.ts","../src/model.ts","../src/index.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        let state = near.storageRead(\"STATE\");\n        if (state) {\n            Object.assign(this, JSON.parse(state));\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n}\n","export const toSerialize = Symbol(\"serialize\");\nexport const toDeserialize = Symbol(\"deserialize\");\n","// deno-lint-ignore-file no-explicit-any\nimport { toSerialize } from \"./symbol.js\";\nexport function serialize(value, options = {}) {\n    let output = \"\";\n    let inc = 0;\n    const prettify = options.prettify ?? false;\n    let depth = 0;\n    const objectMap = new Map();\n    const objectIndexMap = new Map();\n    function _stringifyString(value) {\n        output += `\"${value.replace('\"', '\\\\\"')}\"`; // \" 문자는 escape 해야합니다.\n        return true;\n    }\n    function _stringifyScalar(value) {\n        if (value === null) {\n            output += \"null\";\n            return true;\n        }\n        const typeofValue = typeof value;\n        if (typeofValue === \"undefined\") {\n            output += \"undefined\";\n            return true;\n        }\n        if (typeofValue === \"number\") {\n            if (Number.isNaN(value)) {\n                output += \"NaN\";\n                return true;\n            }\n            if (!Number.isFinite(value)) {\n                output += value > 0 ? \"Infinity\" : \"-Infinity\";\n                return true;\n            }\n            output += `${value}`;\n            return true;\n        }\n        if (typeofValue === \"bigint\") {\n            output += `${value}n`;\n            return true;\n        }\n        if (typeofValue === \"boolean\") {\n            output += value ? \"true\" : \"false\";\n            return true;\n        }\n        if (typeofValue === \"string\") {\n            return _stringifyString(value);\n        }\n        return false;\n    }\n    function _stringifyRoot(value) {\n        if (_stringifyScalar(value)) {\n            return true;\n        }\n        return _stringifyRef(value);\n    }\n    function _stringifyAny(value) {\n        if (_stringifyScalar(value)) {\n            return true;\n        }\n        let oIdx = objectIndexMap.get(value);\n        if (typeof oIdx !== \"number\") {\n            oIdx = inc++;\n            objectIndexMap.set(value, oIdx);\n            objectMap.set(oIdx, value);\n        }\n        output += `$${oIdx}`;\n        return true;\n    }\n    function _stringifyRef(value) {\n        // simple :-)\n        if (typeof value === \"symbol\") {\n            output += \"Symbol(\";\n            if (value.description) {\n                _stringifyString(value.description);\n            }\n            output += \")\";\n            return true;\n        }\n        if (value instanceof RegExp) {\n            output += value.toString();\n            return true;\n        }\n        if (value instanceof Date) {\n            output += \"Date(\";\n            _stringifyAny(value.getTime());\n            output += \")\";\n            return true;\n        }\n        // complex :D\n        if (prettify) {\n            output += \"  \".repeat(depth);\n        }\n        if (Array.isArray(value)) {\n            _stringifyListStart(\"[\");\n            _stringifyList(value);\n            _stringifyListEnd(\"]\");\n            return true;\n        }\n        if (value instanceof Map) {\n            _stringifyListStart(\"Map(\");\n            _stringifyMap([...value.entries()]);\n            _stringifyListEnd(\")\");\n            return true;\n        }\n        if (value instanceof Set) {\n            _stringifyListStart(\"Set(\");\n            _stringifyList([...value]);\n            _stringifyListEnd(\")\");\n            return true;\n        }\n        const name = value.constructor !== Object && value.constructor !== Function\n            ? value.constructor.name\n            : \"\";\n        _stringifyListStart(prettify && name ? `${name} {` : `${name}{`);\n        _stringifyKv(Object.entries(typeof value[toSerialize] === \"function\" ? value[toSerialize]() : value));\n        _stringifyListEnd(\"}\");\n        return true;\n    }\n    const _stringifyListStart = prettify\n        ? (name) => {\n            output += name;\n            output += \"\\n\";\n            depth++;\n        }\n        : (name) => {\n            output += name;\n            depth++;\n        };\n    const _stringifyListEnd = prettify\n        ? (name) => {\n            depth--;\n            output += \"\\n\";\n            output += \"  \".repeat(depth);\n            output += name;\n        }\n        : (name) => {\n            depth--;\n            output += name;\n        };\n    const _stringifyList = prettify\n        ? (value) => {\n            for (let i = 0; i < value.length; i++) {\n                if (i > 0) {\n                    output += \",\\n\";\n                }\n                output += \"  \".repeat(depth);\n                _stringifyAny(value[i]);\n            }\n        }\n        : (value) => {\n            for (let i = 0; i < value.length; i++) {\n                if (i > 0) {\n                    output += \",\";\n                }\n                _stringifyAny(value[i]);\n            }\n        };\n    const _stringifyMap = prettify\n        ? (value) => {\n            for (let i = 0; i < value.length; i++) {\n                if (i > 0) {\n                    output += \",\\n\";\n                }\n                output += \"  \".repeat(depth);\n                _stringifyAny(value[i][0]);\n                output += \" => \";\n                _stringifyAny(value[i][1]);\n            }\n        }\n        : (value) => {\n            for (let i = 0; i < value.length; i++) {\n                if (i > 0) {\n                    output += \",\";\n                }\n                _stringifyAny(value[i][0]);\n                output += \"=>\";\n                _stringifyAny(value[i][1]);\n            }\n        };\n    const _stringifyKv = prettify\n        ? (value) => {\n            for (let i = 0; i < value.length; i++) {\n                if (i > 0) {\n                    output += \",\\n\";\n                }\n                output += \"  \".repeat(depth);\n                _stringifyString(value[i][0]);\n                output += \": \";\n                _stringifyAny(value[i][1]);\n            }\n        }\n        : (value) => {\n            for (let i = 0; i < value.length; i++) {\n                if (i > 0) {\n                    output += \",\";\n                }\n                _stringifyString(value[i][0]);\n                output += \":\";\n                _stringifyAny(value[i][1]);\n            }\n        };\n    inc++;\n    objectIndexMap.set(value, 0);\n    objectMap.set(0, value);\n    _stringifyRoot(value);\n    for (let i = 1; i < inc; i++) {\n        output += \";\";\n        if (prettify) {\n            output += \"\\n\";\n        }\n        _stringifyRoot(objectMap.get(i));\n    }\n    return output;\n}\n","const NUM_CHARS = new Set([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]);\nlet buf = \"\";\nlet pos = 0;\nfunction consume(s) {\n    for (const c of s) {\n        if (buf[pos] !== c) {\n            throw error();\n        }\n        pos++;\n    }\n}\nfunction white() {\n    while (1) {\n        switch (buf[pos]) {\n            case \"\\t\":\n            case \"\\v\":\n            case \"\\f\":\n            case \" \":\n            case \"\\u00A0\":\n            case \"\\uFEFF\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                pos++;\n                break;\n            default:\n                return;\n        }\n    }\n}\nfunction error() {\n    return new SyntaxError(`Unexpected ${buf[pos] ? `token ${buf[pos]}` : \"end\"} in SuperSerial at position ${pos}`);\n}\nfunction parseAny() {\n    white();\n    if (buf[pos] === \"$\") {\n        pos++;\n        let result = \"\";\n        while (NUM_CHARS.has(buf[pos])) {\n            result += buf[pos++];\n        }\n        return [64, +result];\n    }\n    return parseRoot();\n}\nfunction parseRoot() {\n    white();\n    switch (buf[pos]) {\n        case \"-\":\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\": {\n            return parseNumber();\n        }\n        case '\"':\n            return parseString();\n        case \"[\":\n            return parseArray();\n        case \"/\":\n            return parseRegExp();\n        default: {\n            const name = keyword();\n            switch (name) {\n                case \"null\":\n                    return [1];\n                case \"true\":\n                    return [2, true];\n                case \"false\":\n                    return [2, false];\n            }\n            if (buf[pos] === \"{\") {\n                return parseObject(name);\n            }\n            switch (name) {\n                case \"undefined\":\n                    return [0];\n                case \"NaN\":\n                    return [3, NaN];\n                case \"Infinity\":\n                    return [3, Infinity];\n            }\n            if (buf[pos] === \"(\") {\n                switch (name) {\n                    case \"Map\":\n                        return parseMap();\n                    case \"Set\":\n                        return parseSet();\n                    case \"Date\":\n                        return parseDate();\n                    case \"Symbol\":\n                        return parseSymbol();\n                    default:\n                        throw error();\n                }\n            }\n        }\n    }\n    throw error();\n}\nfunction parseNumber() {\n    let result = \"\";\n    let mult = 1;\n    if (buf[pos] === \"-\") {\n        pos++;\n        mult = -1;\n    }\n    if (buf[pos] === \"I\") {\n        pos++;\n        consume(\"nfinity\");\n        return [3, mult * Infinity];\n    }\n    if (NUM_CHARS.has(buf[pos])) {\n        result += buf[pos++];\n    }\n    else {\n        throw error();\n    }\n    while (NUM_CHARS.has(buf[pos])) {\n        result += buf[pos++];\n    }\n    if (buf[pos] === \"n\") {\n        pos++;\n        return [4, BigInt(result) * BigInt(mult)];\n    }\n    else {\n        if (buf[pos] === \".\") {\n            result += buf[pos++];\n            while (NUM_CHARS.has(buf[pos])) {\n                result += buf[pos++];\n            }\n        }\n        if (buf[pos] === \"e\" || buf[pos] === \"E\") {\n            result += buf[pos++];\n            if (buf[pos] === \"-\" || buf[pos] === \"+\") {\n                result += buf[pos++];\n            }\n            if (NUM_CHARS.has(buf[pos])) {\n                result += buf[pos++];\n            }\n            else {\n                throw error();\n            }\n            while (NUM_CHARS.has(buf[pos])) {\n                result += buf[pos++];\n            }\n        }\n    }\n    return [3, +result * mult];\n}\nfunction parseString() {\n    let result = \"\";\n    pos++;\n    while (1) {\n        switch (buf[pos]) {\n            case '\"':\n                pos++;\n                return [5, result];\n            case \"\\\\\":\n                pos++;\n                switch (buf[pos]) {\n                    case \"u\": {\n                        pos++;\n                        let uffff = 0;\n                        for (let i = 0; i < 4; i++) {\n                            const hex = parseInt(buf[pos], 16);\n                            if (!isFinite(hex)) {\n                                throw error();\n                            }\n                            pos++;\n                            uffff = uffff * 16 + hex;\n                        }\n                        result += String.fromCharCode(uffff);\n                        continue;\n                    }\n                    case '\"':\n                        pos++;\n                        result += '\"';\n                        continue;\n                    case \"\\\\\":\n                        pos++;\n                        result += \"\\\\\";\n                        continue;\n                    case \"b\":\n                        pos++;\n                        result += \"\\b\";\n                        continue;\n                    case \"f\":\n                        pos++;\n                        result += \"\\f\";\n                        continue;\n                    case \"n\":\n                        pos++;\n                        result += \"\\n\";\n                        continue;\n                    case \"r\":\n                        pos++;\n                        result += \"\\r\";\n                        continue;\n                    case \"t\":\n                        pos++;\n                        result += \"\\t\";\n                        continue;\n                }\n                break;\n            default:\n                result += buf[pos++];\n                continue;\n        }\n        break;\n    }\n    throw error();\n}\nfunction parseArray() {\n    pos++;\n    white();\n    if (buf[pos] === \"]\") {\n        pos++;\n        return [16, []];\n    }\n    const result = [];\n    result.push(parseAny());\n    white();\n    while (buf[pos] === \",\") {\n        pos++;\n        result.push(parseAny());\n        white();\n    }\n    if (buf[pos] === \"]\") {\n        pos++;\n        return [16, result];\n    }\n    throw error();\n}\nfunction parseObject(name = null) {\n    pos++;\n    white();\n    if (buf[pos] === \"}\") {\n        pos++;\n        return [17, name, []];\n    }\n    const result = [];\n    while (1) {\n        const key = parseString(); // TODO Symbol\n        white();\n        if (buf[pos] !== \":\") {\n            throw error();\n        }\n        pos++;\n        result.push([key, parseAny()]);\n        white();\n        if (buf[pos] === \",\") {\n            pos++;\n            white();\n            continue;\n        }\n        if (buf[pos] === \"}\") {\n            pos++;\n            return [17, name, result];\n        }\n        break;\n    }\n    throw error();\n}\nfunction parseRegExp() {\n    pos++;\n    let pattern = \"\";\n    if (buf[pos] === \"/\") {\n        throw error();\n    }\n    while (buf[pos]) {\n        if (buf[pos] === \"/\") {\n            pos++;\n            switch (buf[pos]) {\n                case \"i\": {\n                    pos++;\n                    switch (buf[pos]) {\n                        case \"m\": {\n                            pos++;\n                            if (buf[pos] === \"g\") {\n                                pos++;\n                                return [32, pattern, \"img\"];\n                            }\n                            else {\n                                return [32, pattern, \"im\"];\n                            }\n                        }\n                        case \"g\": {\n                            pos++;\n                            if (buf[pos] === \"m\") {\n                                pos++;\n                                return [32, pattern, \"igm\"];\n                            }\n                            else {\n                                return [32, pattern, \"ig\"];\n                            }\n                        }\n                        default: {\n                            return [32, pattern, \"i\"];\n                        }\n                    }\n                }\n                case \"m\": {\n                    pos++;\n                    switch (buf[pos]) {\n                        case \"i\": {\n                            pos++;\n                            if (buf[pos] === \"g\") {\n                                pos++;\n                                return [32, pattern, \"mig\"];\n                            }\n                            else {\n                                return [32, pattern, \"mi\"];\n                            }\n                        }\n                        case \"g\": {\n                            pos++;\n                            if (buf[pos] === \"i\") {\n                                pos++;\n                                return [32, pattern, \"mgi\"];\n                            }\n                            else {\n                                return [32, pattern, \"mg\"];\n                            }\n                        }\n                        default: {\n                            return [32, pattern, \"m\"];\n                        }\n                    }\n                }\n                case \"g\": {\n                    pos++;\n                    switch (buf[pos]) {\n                        case \"m\": {\n                            pos++;\n                            if (buf[pos] === \"i\") {\n                                pos++;\n                                return [32, pattern, \"gmi\"];\n                            }\n                            else {\n                                return [32, pattern, \"gm\"];\n                            }\n                        }\n                        case \"i\": {\n                            pos++;\n                            if (buf[pos] === \"m\") {\n                                pos++;\n                                return [32, pattern, \"gim\"];\n                            }\n                            else {\n                                return [32, pattern, \"gi\"];\n                            }\n                        }\n                        default: {\n                            return [32, pattern, \"g\"];\n                        }\n                    }\n                }\n            }\n            return [32, pattern, null];\n        }\n        else if (buf[pos] === \"\\\\\") {\n            pattern += buf[pos++];\n            pattern += buf[pos++];\n        }\n        else {\n            pattern += buf[pos++];\n        }\n    }\n    throw error();\n}\nfunction parseSet() {\n    pos++;\n    white();\n    if (buf[pos] === \")\") {\n        pos++;\n        return [34, []];\n    }\n    const items = [];\n    items.push(parseAny());\n    white();\n    while (buf[pos] === \",\") {\n        pos++;\n        items.push(parseAny());\n        white();\n    }\n    if (buf[pos] === \")\") {\n        pos++;\n        return [34, items];\n    }\n    throw error();\n}\nfunction parseMap() {\n    pos++;\n    white();\n    if (buf[pos] === \")\") {\n        pos++;\n        return [35, []];\n    }\n    const entries = [];\n    while (1) {\n        const key = parseAny();\n        white();\n        consume(\"=>\");\n        white();\n        const value = parseAny();\n        entries.push([key, value]);\n        white();\n        if (buf[pos] === \",\") {\n            pos++;\n            white();\n            continue;\n        }\n        if (buf[pos] === \")\") {\n            pos++;\n            break;\n        }\n        throw error();\n    }\n    return [35, entries];\n}\nfunction parseSymbol() {\n    pos++;\n    white();\n    if (buf[pos] === \")\") {\n        pos++;\n        return [6, null];\n    }\n    if (buf[pos] === '\"') {\n        const valueString = parseString();\n        white();\n        if (buf[pos] === \")\") {\n            pos++;\n            return [6, valueString[1]];\n        }\n    }\n    throw error();\n}\nfunction parseDate() {\n    pos++;\n    white();\n    let value = \"\";\n    let mult = 1;\n    if (buf[pos] === \"-\") {\n        pos++;\n        mult = -1;\n    }\n    if (NUM_CHARS.has(buf[pos])) {\n        value += buf[pos++];\n    }\n    else {\n        throw error();\n    }\n    while (NUM_CHARS.has(buf[pos])) {\n        value += buf[pos++];\n    }\n    if (buf[pos] === \".\") {\n        value += buf[pos++];\n        while (NUM_CHARS.has(buf[pos])) {\n            value += buf[pos++];\n        }\n    }\n    if (buf[pos] === \"e\" || buf[pos] === \"E\") {\n        value += buf[pos++];\n        if (buf[pos] === \"-\" || buf[pos] === \"+\") {\n            value += buf[pos++];\n        }\n        if (NUM_CHARS.has(buf[pos])) {\n            value += buf[pos++];\n        }\n        else {\n            throw error();\n        }\n        while (NUM_CHARS.has(buf[pos])) {\n            value += buf[pos++];\n        }\n    }\n    white();\n    if (buf[pos] === \")\") {\n        pos++;\n        return [33, +value * mult];\n    }\n    throw error();\n}\nfunction keyword() {\n    let chartCode = buf.charCodeAt(pos);\n    let result = \"\";\n    if (chartCode >= 65 && chartCode <= 90 || // UPPERCASE\n        chartCode >= 97 && chartCode <= 122 || // lowercase\n        chartCode === 95 // _\n    ) {\n        result += buf[pos++];\n    }\n    else {\n        return null;\n    }\n    while ((chartCode = buf.charCodeAt(pos))) {\n        if (chartCode >= 65 && chartCode <= 90 || // UPPERCASE\n            chartCode >= 97 && chartCode <= 122 || // lowercase\n            chartCode >= 48 && chartCode <= 57 || // number\n            chartCode === 95 // _\n        ) {\n            result += buf[pos++];\n        }\n        else {\n            break;\n        }\n    }\n    white();\n    return result;\n}\nexport function parse(ctx) {\n    buf = ctx;\n    pos = 0;\n    const roots = [];\n    roots.push(parseRoot());\n    white();\n    while (buf[pos] === \";\") {\n        pos++;\n        roots.push(parseRoot());\n        white();\n    }\n    if (buf.length !== pos) {\n        throw error();\n    }\n    return roots;\n}\n","// deno-lint-ignore-file no-explicit-any\nimport { parse } from \"./parse.js\";\nimport { toDeserialize } from \"./symbol.js\";\nexport function deserialize(ctx, options = {}) {\n    const mapClasses = options.classes ?? {};\n    const refs = [];\n    const valueMap = new Map();\n    const resolvers = [];\n    function transformAstAny(ast) {\n        if (ast[0] === 64) {\n            const index = ast[1];\n            if (index in refs) {\n                return refs[index];\n            }\n            throw new Error(`not found ref $${index}`);\n        }\n        return transformAstRoot(ast);\n    }\n    function transformAstRoot(ast) {\n        const value = valueMap.get(ast);\n        if (value) {\n            return value;\n        }\n        switch (ast[0]) {\n            case 0:\n                return undefined;\n            case 1:\n                return null;\n            case 2: // boolean\n            case 3: // number\n            case 4: // bigint\n            case 5: // string\n                return ast[1];\n            case 6: {\n                const value = typeof ast[1] === \"string\" ? Symbol(ast[1]) : Symbol();\n                valueMap.set(ast, value);\n                return value;\n            }\n            case 16: {\n                const value = [];\n                valueMap.set(ast, value);\n                const items = ast[1];\n                resolvers.push(() => {\n                    value.push(...items.map(transformAstAny));\n                });\n                return value;\n            }\n            case 17: {\n                const name = ast[1];\n                const entries = ast[2];\n                const baseClass = name ? mapClasses[name] ?? null : null;\n                if (name && !baseClass) {\n                    console.warn(`Class ${name} is not defined. It will be ignored.`);\n                }\n                const value = baseClass ? Reflect.construct(baseClass, []) : {};\n                valueMap.set(ast, value);\n                resolvers.push(() => {\n                    const merged = Object.fromEntries(entries.map(([k, v]) => [k[1], transformAstAny(v)]));\n                    if (typeof value[toDeserialize] === \"function\") {\n                        value[toDeserialize](merged);\n                    }\n                    else {\n                        Object.assign(value, merged);\n                    }\n                });\n                return value;\n            }\n            case 32: {\n                const value = ast[2] ? new RegExp(ast[1], ast[2]) : new RegExp(ast[1]);\n                valueMap.set(ast, value);\n                return value;\n            }\n            case 33: {\n                const value = new Date(ast[1]);\n                valueMap.set(ast, value);\n                return value;\n            }\n            case 34: {\n                const value = new Set();\n                valueMap.set(ast, value);\n                const items = ast[1];\n                resolvers.push(() => {\n                    for (const item of items) {\n                        value.add(transformAstAny(item));\n                    }\n                });\n                return value;\n            }\n            case 35: {\n                const value = new Map();\n                valueMap.set(ast, value);\n                const entries = ast[1];\n                resolvers.push(() => {\n                    for (const [k, v] of entries) {\n                        value.set(transformAstAny(k), transformAstAny(v));\n                    }\n                });\n                return value;\n            }\n        }\n        throw new Error(`wrong ast type(${ast[0]})`);\n    }\n    for (const [rootIndex, root] of parse(ctx).entries()) {\n        refs[rootIndex] = transformAstRoot(root);\n    }\n    let resolver;\n    while ((resolver = resolvers.shift())) {\n        resolver();\n    }\n    return refs[0];\n}\n","// deno-lint-ignore-file no-explicit-any\nimport { serialize } from \"./serialize.js\";\nimport { deserialize } from \"./deserialize.js\";\nexport class Serializer {\n    constructor(options) {\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n    }\n    serialize(value, options) {\n        return serialize(value, options);\n    }\n    deserialize(code) {\n        return deserialize(code, this.options);\n    }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nimport { Serializer } from 'superserial';\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix, classes) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.serializer = new Serializer({ classes });\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return this.serializer.deserialize(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, this.serializer.serialize(last))) {\n                return this.serializer.deserialize(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, this.serializer.serialize(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return this.serializer.deserialize(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, this.serializer.serialize(element))) {\n                return this.serializer.deserialize(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nimport { Serializer } from 'superserial';\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix, classes) {\n        this.length = 0;\n        this.keyIndexPrefix = prefix + \"i\";\n        let indexKey = prefix + \"k\";\n        let indexValue = prefix + \"v\";\n        this.keys = new Vector(indexKey, classes);\n        this.values = new Vector(indexValue, classes);\n        this.serializer = new Serializer(classes);\n    }\n    len() {\n        let keysLen = this.keys.len();\n        let valuesLen = this.values.len();\n        if (keysLen != valuesLen) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        let valuesIsEmpty = this.values.isEmpty();\n        if (keysIsEmpty != valuesIsEmpty) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysIsEmpty;\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    getIndexRaw(key) {\n        let indexLookup = this.keyIndexPrefix + this.serializer.serialize(key);\n        let indexRaw = near.storageRead(indexLookup);\n        return indexRaw;\n    }\n    get(key) {\n        let indexRaw = this.getIndexRaw(key);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            let value = this.values.get(index);\n            if (value) {\n                return value;\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return null;\n    }\n    set(key, value) {\n        let indexLookup = this.keyIndexPrefix + this.serializer.serialize(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            return this.values.replace(index, value);\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.keys.push(key);\n            this.values.push(value);\n            return null;\n        }\n    }\n    remove(key) {\n        let indexLookup = this.keyIndexPrefix + this.serializer.serialize(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastKey = this.keys.get(this.len() - 1);\n                if (!lastKey) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastKey != key) {\n                    let lastLookupKey = this.keyIndexPrefix + this.serializer.serialize(lastKey);\n                    near.storageWrite(lastLookupKey, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.keys.swapRemove(index);\n            return this.values.swapRemove(index);\n        }\n        return null;\n    }\n    clear() {\n        for (let key of this.keys) {\n            let indexLookup = this.keyIndexPrefix + this.serializer.serialize(key);\n            near.storageRemove(indexLookup);\n        }\n        this.keys.clear();\n        this.values.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.values = new VectorIterator(unorderedMap.values);\n    }\n    next() {\n        let key = this.keys.next();\n        let value = this.values.next();\n        if (key.done != value.done) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return { value: [key.value, value.value], done: key.done };\n    }\n}\n","import { NearContract, NearBindgen, near, call, view, UnorderedSet, UnorderedMap } from 'near-sdk-js'\n\nexport function assert(statement, message) {\n    if (!statement) {\n        throw Error(`Assertion failed: ${message}`)\n    }\n}\n\nexport function make_private(){\n    assert(near.predecessorAccountId() == near.currentAccountId(), \"This is a private method\")\n}","export const STORAGE_COST = BigInt(\"1000000000000000000000\")\n\nexport class Donation {\n    account_id: string;\n    total_amount: bigint;\n\n    constructor({account_id, total_amount}: {account_id: string, total_amount: bigint}) {\n        this.account_id = account_id;\n        this.total_amount = total_amount;\n    }\n}","import { NearContract, NearBindgen, near, call, view, UnorderedMap, Vector } from 'near-sdk-js'\nimport { assert, make_private } from './utils'\nimport { Donation, STORAGE_COST } from './model'\n\nconst PREFIX = \"p\"\n\n@NearBindgen\nclass HelloNear extends NearContract {\n    beneficiary: string;\n    donations: UnorderedMap<string, Donation>;\n    \n    constructor({ beneficiary = \"v1.faucet.nonofficial.testnet\" }: { beneficiary: string }) {\n        super()\n        this.beneficiary = beneficiary;\n        this.donations = new UnorderedMap<string, Donation>(PREFIX);\n    }\n\n    deserialize() {\n        super.deserialize()\n        this.donations.keys = Object.assign(new Vector(PREFIX + 'k'), this.donations.keys)\n        this.donations.values = Object.assign(new Vector(PREFIX + 'v'), this.donations.values)\n        this.donations = Object.assign(new UnorderedMap(PREFIX), this.donations)\n    }\n\n    @call\n    donate() {\n        // Get who is calling the method and how much $NEAR they attached\n        let donor = near.predecessorAccountId(); \n        let donationAmount = near.attachedDeposit().valueOf();\n\n        let currentDonation: Donation = this.donations.get(donor) || new Donation({ account_id: donor, total_amount: BigInt(0) });\n        let donatedSoFar = currentDonation.total_amount;\n        let toTransfer = donationAmount;\n        \n        // This is the user's first donation, lets register it, which increases storage\n        if (donatedSoFar.toString() === \"0\") {\n            assert(donationAmount > STORAGE_COST, `Attach at least ${STORAGE_COST} yoctoNEAR`);\n\n            // Subtract the storage cost to the amount to transfer\n            toTransfer -= STORAGE_COST\n        }\n\n        // Persist in storage the amount donated so far\n        donatedSoFar += donationAmount;\n        currentDonation.total_amount = donatedSoFar;\n        this.donations.set(donor, currentDonation);\n        near.log(`Thank you ${donor} for donating ${donationAmount}! You donated a total of ${donatedSoFar}`);\n\n        // Send the money to the beneficiary (TODO)\n        const promise = near.promiseBatchCreate(this.beneficiary)\n        near.promiseBatchActionTransfer(promise, toTransfer)\n\n        // Return the total amount donated so far\n        return donatedSoFar.toString()\n    }\n\n    @call\n    change_beneficiary({ beneficiary }: { beneficiary: string }) {\n        make_private();\n        this.beneficiary = beneficiary;\n    }\n\n    @view\n    get_beneficiary(): string { return this.beneficiary }\n\n    @view\n    total_donations(): number { return this.donations.len() }\n\n    @view\n    get_donations({from_index = 0, limit = 50 }: { from_index: number, limit: number }): Donation[] {\n        // Loop through the donations and return the ones that are in the range\n        let donationsArray = this.donations.toArray();\n        let actualLimit = Math.min(limit, donationsArray.length - from_index);\n        let donations = [];\n        for (let i = from_index; i < actualLimit; i++) {\n            donations.push(donationsArray[i][1]);\n        }\n\n        return donations\n    }\n\n    @view\n    get_donation_for_account({ account_id }: { account_id: string }): Donation {\n        return new Donation({\n            account_id: account_id,\n            total_amount: this.donations.get(account_id).total_amount || BigInt(0)\n        })\n    }\n}"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","predecessorAccountId","predecessor_account_id","read_register","attachedDeposit","attached_deposit","storageRead","storage_read","storageGetEvicted","currentAccountId","current_account_id","input","promiseBatchCreate","accountId","promise_batch_create","promiseBatchActionTransfer","promiseIndex","amount","promise_batch_action_transfer","PromiseResult","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","state","near","assign","parse","Error","serializeReturn","toSerialize","Symbol","toDeserialize","options","output","inc","prettify","depth","objectMap","Map","objectIndexMap","_stringifyString","replace","_stringifyScalar","typeofValue","Number","isNaN","isFinite","_stringifyRoot","_stringifyRef","_stringifyAny","oIdx","get","set","description","RegExp","toString","Date","getTime","repeat","Array","isArray","_stringifyListStart","_stringifyList","_stringifyListEnd","_stringifyMap","entries","Set","name","constructor","Function","_stringifyKv","i","length","NUM_CHARS","buf","pos","consume","s","c","error","white","SyntaxError","parseAny","result","has","parseRoot","parseNumber","parseString","parseArray","parseRegExp","keyword","parseObject","NaN","Infinity","parseMap","parseSet","parseDate","parseSymbol","mult","BigInt","uffff","hex","parseInt","String","fromCharCode","push","pattern","items","valueString","chartCode","charCodeAt","ctx","roots","mapClasses","classes","refs","valueMap","resolvers","transformAstAny","ast","index","transformAstRoot","baseClass","console","warn","Reflect","construct","merged","fromEntries","k","v","item","add","rootIndex","root","resolver","shift","Serializer","defineProperty","enumerable","configurable","writable","code","u8ArrayToBytes","array","e","bytesToU8Array","bytes","Uint8Array","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","data","Uint32Array","buffer","Vector","serializer","len","isEmpty","storageKey","swapRemove","pop","last","element","lastIndex","lastKey","extend","elements","iterator","VectorIterator","clear","toArray","vector","current","next","done","UnorderedMap","keyIndexPrefix","indexKey","indexValue","keys","values","keysLen","valuesLen","keysIsEmpty","valuesIsEmpty","serializeIndex","deserializeIndex","rawIndex","getIndexRaw","indexLookup","indexRaw","nextIndex","nextIndexRaw","remove","lastLookupKey","UnorderedMapIterator","kvs","unorderedMap","assert","statement","message","make_private","STORAGE_COST","Donation","account_id","total_amount","PREFIX","HelloNear","beneficiary","donations","donate","donor","donationAmount","valueOf","currentDonation","donatedSoFar","toTransfer","promise","change_beneficiary","get_beneficiary","total_donations","get_donations","from_index","limit","donationsArray","actualLimit","Math","min","get_donation_for_account"],"mappings":"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"}